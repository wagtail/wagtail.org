# Generated by Django 3.2.18 on 2024-01-05 17:55

from django.db import migrations, models
import django.db.models.deletion

import modelcluster.fields
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("wagtailcore", "0083_workflowcontenttype"),
        ("images", "0013_wagtail_42"),
    ]

    operations = [
        migrations.CreateModel(
            name="Sector",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="ShowcasePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "social_text",
                    models.CharField(
                        blank=True,
                        help_text="Description of this page as it should appear when shared on social networks, or in Google results",
                        max_length=255,
                        verbose_name="Meta description",
                    ),
                ),
                (
                    "listing_intro",
                    models.TextField(
                        blank=True,
                        help_text="Summary of this page to display when this is linked from elsewhere in the site.",
                    ),
                ),
                ("introduction", wagtail.fields.RichTextField(blank=True)),
                (
                    "cta",
                    wagtail.fields.StreamField(
                        [
                            (
                                "cta",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "cta",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    (
                                                        "text",
                                                        wagtail.blocks.CharBlock(
                                                            label="CTA text",
                                                            max_length=255,
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "cta_page",
                                                        wagtail.blocks.PageChooserBlock(
                                                            label="CTA page",
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "cta_url",
                                                        wagtail.blocks.URLBlock(
                                                            label="CTA URL",
                                                            required=False,
                                                        ),
                                                    ),
                                                ]
                                            ),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.TextBlock(
                                                label="Short description",
                                                max_length=100,
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        help_text="Allows for a maximum of 1 CTA blocks",
                        use_json_field=True,
                    ),
                ),
                (
                    "listing_meta_description",
                    models.CharField(
                        blank=True,
                        help_text="The description beneath the listing",
                        max_length=255,
                    ),
                ),
                (
                    "listing_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image to display along with summary, when this page is linked from elsewhere in the site.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.wagtailioimage",
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image to appear alongside 'Meta description', particularly for sharing on social networks",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.wagtailioimage",
                        verbose_name="Meta image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="ShowcaseItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("alt_text", models.CharField(blank=True, max_length=255)),
                ("external_link", models.URLField(blank=True)),
                ("link_text", models.CharField(max_length=255)),
                (
                    "image",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.wagtailioimage",
                    ),
                ),
                (
                    "internal_link",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "logo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.wagtailioimage",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="showcase_items",
                        to="showcase.showcasepage",
                    ),
                ),
                (
                    "sector",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="showcase.sector",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
